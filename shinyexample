#Player Shots 
library(shiny)
library(ggplot2)
library(dplyr)

shots  <- read.csv(file="c:/Users/donag/OneDrive/Spreadsheet fun/PA Analytics/PA Template/teamAB.csv", header=TRUE, sep=";")
attach (shots)

ui <- pageWithSidebar(
    headerPanel("witnesstheanalysis.com"),
    sidebarPanel(
        selectInput("teaminput","team", 
                    list("Team A" = "A", "Team B" = "B")),
        selectInput("player", "Player:",
                    list("Player" = list("1", "2", "3","4","5","6","7","8","9","10","11","12","13",
                                         "14","15","16","17","18","19","20","21","22","23","24","25","26","27","28","29","30"))),
        width = 2),
    mainPanel(
        fluidRow( 
            column(width = 5,
                   plotOutput("plot1")),
            column(2,offset = 5,
                   tableOutput("table")))
        
    )
)

server = function(input, output){
    
 
    ##1.5 theme
    
    theme_blankPitch = function(size=12) { 
        theme(
            #axis.line=element_blank(), 
            axis.text.x=element_blank(), 
            axis.text.y=element_blank(), 
            #axis.ticks.y=element_text(size=size),
            #axis.ticks=element_blank(),
            axis.ticks.length=unit(0, "lines"), 
            #axis.ticks.margin=unit(0, "lines"), 
            axis.title.x=element_blank(), 
            axis.title.y=element_blank(), 
            legend.key.size=unit(1.2, "lines"), 
            legend.text=element_text(size=size), 
            legend.title=element_text(size=size, face="bold",hjust=0),
            # panel.border=element_blank(), 
            panel.grid.major=element_blank(), 
            panel.grid.minor=element_blank(), 
            panel.spacing=element_blank(), 
            plot.margin=unit(c(0, 0, 0, 0), "lines"), 
            plot.title=element_text(size=size*1.2), 
            panel.background=element_rect(fill="lightgreen",colour="lightgreen"),
            strip.text.x=element_text(size=size*1))}
    
    circleFundef <- function(center=c(0,0), diameter=1, npoints=100, start=0, end=2)
    {
        tt <- seq(start*pi, end*pi, length.out=npoints)
        data.frame(x = center[1] + diameter / 2 * cos(tt), 
                   y = center[2] + diameter / 2 * sin(tt))
    }
    
    circleFunatt <- function(center=c(0,0), diameter=1, npoints=100, start=0, end=2)
    {
        tt <- seq(start*pi, end*pi, length.out=npoints)
        data.frame(x = center[1] - diameter / 2 * cos(tt), 
                   y = center[2] - diameter / 2 * sin(tt))
    }
    #### create semi circle ####
    def_circle <-  circleFundef(c(20,49), 26, start=1.5, end=2.5)
    att_circle <-  circleFunatt(c(124,49), 26, start=1.5, end=2.5)
    
    
    ocome <- c("Ko Rec"= 2,
               "Ko Lost"= 6,
               "Goal"= 15,
               "Point"= 16,
               "Miss"= 4,
               "Fk Goal"= 18,
               "Fk Point"= 1,
               "Fk Miss"=3)
    
    teamcol <- c("A" = "red",
                 "B" = "blue")
    
    
    ## 2. Create a plot ##
    
    output$plot1 = renderPlot({
            filtered <-
                shots %>%
                filter(
                       team == input$teaminput,
                       player == input$player
                )
        ggplot(filtered, aes(x = x, y = y)) +
            geom_point(aes(color = team,
                           shape = outcome), size = 3, stroke = 2) +
            lims(x = c(0, 144), y = c(0, 98)) +
            theme(legend.position="bottom") +
            theme_blankPitch() +
            geom_segment(aes(x = 0, y = 0, xend = 144, yend = 0),colour = "white",linetype="solid") +
            geom_segment(aes(x = 0, y = 98, xend = 144, yend = 98),colour = "white",linetype="solid") +
            geom_segment(aes(x = 0, y = 0, xend = 0, yend = 98),colour = "white",linetype="solid") +
            geom_segment(aes(x = 144, y =0 , xend = 144, yend = 98),colour = "white",linetype="solid") +
            geom_segment(aes(x = 13, y = 0, xend = 13, yend = 98),colour = "white",linetype="solid",size = .5) +   
            geom_segment(aes(x = 20, y = 0, xend = 20, yend = 98),colour = "white",linetype="solid",size = .5) + 
            geom_segment(aes(x = 45, y = 0, xend = 45, yend = 98),colour = "white",linetype="solid",size = .5) +
            geom_segment(aes(x = 65, y = 0, xend = 65, yend = 98),colour = "white",linetype="solid",size = .5) +
            geom_segment(aes(x = 79, y = 0, xend = 79, yend = 98),colour = "white",linetype="solid",size = .5) +
            geom_segment(aes(x = 99, y = 0, xend = 99, yend = 98),colour = "white",linetype="solid",size = .5) +
            geom_segment(aes(x = 124, y = 0, xend = 124, yend = 98),colour = "white",linetype="solid",size = .5) +
            geom_segment(aes(x = 131, y = 0, xend = 131, yend = 98),colour = "white",linetype="solid",size = .5) + 
            geom_segment(aes(x = 0, y = 39.5, xend = 13, yend = 39.5),colour = "white",linetype="solid",size = .5) + 
            geom_segment(aes(x = 0, y = 58.5, xend = 13, yend = 58.5),colour = "white",linetype="solid",size = .5) +
            geom_segment(aes(x = 131, y = 39.5, xend = 144, yend = 39.5),colour = "white",linetype="solid",size = .5) + 
            geom_segment(aes(x = 131, y = 58.5, xend = 144, yend = 58.5),colour = "white",linetype="solid",size = .5) +
            geom_segment(aes(x = 72.5, y = 45.75, xend = 72.5, yend = 52.25),colour = "white",linetype="solid",size = .5) +
            geom_segment(aes(x = 0, y = 42, xend = 4.5, yend = 42),colour = "white",linetype="solid",size = .5) +
            geom_segment(aes(x = 0, y = 56, xend = 4.5, yend = 56),colour = "white",linetype="solid",size = .5) + 
            geom_segment(aes(x = 4.5, y = 42, xend = 4.5, yend = 56),colour = "white",linetype="solid",size = .5) +
            geom_segment(aes(x = 139.5, y = 42, xend = 144, yend = 42),colour = "white",linetype="solid",size = .5) +
            geom_segment(aes(x = 139.5, y = 56, xend = 144, yend = 56),colour = "white",linetype="solid",size = .5) +
            geom_segment(aes(x = 139.5, y = 42, xend = 139.5, yend = 56),colour = "white",linetype="solid",size = .5) +
            geom_segment(aes(x = 139.5, y = 42, xend = 139.5, yend = 56),colour = "white",linetype="solid",size = .5) +
            geom_segment(aes(x = 11, y = 48.5, xend = 11, yend = 49.5),colour = "white",linetype="solid",size = .5) +
            geom_segment(aes(x = 133, y = 48.5, xend = 133, yend = 49.5),colour = "white", size = .5) +
            geom_segment(aes(x = 0, y = 45.75, xend = 0, yend = 52.5),colour = "blue", size = 1) +
            geom_segment(aes(x =144, y = 45.75, xend = 144, yend = 52.5),colour = "red", size = 1) +
            annotate(geom="text", x= 14.30, y=1.23, label="13",color = "white", size = 4) +
            annotate(geom="text", x= 21.30, y=1.23, label="20",color = "white", size = 4) +
            annotate(geom="text", x= 46.30, y=1.23, label="45",color = "blue", size = 4) +
            annotate(geom="text", x= 66.30, y=1.23, label="65",color = "white", size = 4) +
            annotate(geom="text", x=80.30, y=1.23, label="65", color="white", size = 4) +
            annotate(geom="text", x=100.30, y=1.23, label="45",color = "red", size = 4) +
            annotate(geom="text", x=125.30, y=1.23, label="20",color = "white", size = 4) +
            annotate(geom="text", x=132.30, y=1.23, label="13",color = "white", size = 4) +
            geom_path(data=def_circle, aes(x,y), colour = "white",size = 0.5) +
            geom_path(data=att_circle, aes(x,y), colour = "white",size = 0.5) + 
            annotate(geom="text", x= 72, y=4, label="www.witnesstheanalysis.com",color = "white",size = 5, alpha = 0.9) +
            annotate(geom="text", x= 72, y=96, label="www.witnesstheanalysis.com",color = "white",size = 5, alpha = 0.9) + 
            scale_shape_manual(values = ocome) +
            scale_colour_manual(values = teamcol)
    },height = 900, width = 900)
    
    
    shotstab <- shots  %>% select(shot,team,player,outcome,time)
    
    output$table <- renderTable({filtered <-
        shotstab %>%
        filter(
            team == input$teaminput,
            player == input$player
        )
       
    })
    
    
}

shinyApp(ui, server)



